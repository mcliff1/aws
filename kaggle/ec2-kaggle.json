{
	"AWSTemplateFormatVersion" : "2010-09-09",
	"Description" : "EC2 instance intended to run the Kaggle docker image",
	"Parameters" : {
		"Project" : {
			"Description" : "Project Name",
			"Type" : "String",
			"Default" : "Kaggle Docker Workstation"
		},
		"Ec2KeyPair" : {
			"Description" : "Amazon EC2 Key Pair",
			"Type" : "AWS::EC2::KeyPair::KeyName"
		},
		"VPC" : {
			"Description" : "VPC to place instance in (required to create SG)",
			"Type" : "AWS::EC2::VPC::Id"
		},
		"SubnetId" : {
			"Description" : "I think this can be removed",
			"Type" : "AWS::EC2::Subnet::Id"
		},
		"DomainName" : {
			"Description" : "(optional) Domain to add",
			"Type" : "String",
			"Default" : "nodomainname"
		},
		"HostName" : {
			"Description" : "(optional) Host to add",
			"Type" : "String",
			"Default" : "kaggle"
		},
		"NetworkAccessIP" : {
			"Description": "Source that has SSH access to the bastion host. (i.e. 50.32.108.38/32)",
			"Type": "String",
			"MinLength": "9",
			"MaxLength": "18",
			"Default": "0.0.0.0/0",
			"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
			"ConstraintDescription": "must be a valid CIDR range of the form x.x.x.x/x."
		}
	},
	"Conditions" : {
		"CreateDnsResources" : {"Fn::Not" : [{ "Fn::Equals" : [{"Ref" : "DomainName"}, "nodomainname"] }] }
	},
	"Resources" : {

		"Ec2SecurityGroup": {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"GroupDescription" : "Allows access to ports 22 and 8888" ,
				"SecurityGroupIngress" : [
					{ "Description" : "Access to SSH", "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0" },
					{ "Description" : "http test port", "IpProtocol" : "tcp", "FromPort" : "8888", "ToPort" : "8888", "CidrIp" : "0.0.0.0/0" }
				],
				"VpcId" : {"Ref": "VPC"},
				"Tags" : [
					{ "Key" : "Name", "Value" : {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-SecurityGroup"]]}},
					{ "Key" : "Project", "Value" : {"Ref": "Project"} }
				]
			}
		},



		"NotebookVolume": {
			"Type": "AWS::EC2::Volume",
			"Properties":{
				"AvailabilityZone": {"Fn::Join": ["", [{"Ref": "AWS::Region"}, "a"]]},
				"Size": 32,
				"VolumeType": "gp2",
				"Tags": [
					{ "Key" : "Name", "Value" : {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-NotebookVolume"]]}},
					{ "Key" : "Project", "Value" : {"Ref": "Project"} }
				]
			}
		},

		"IamRole" : {
			"Type" : "AWS::IAM::Role",
			"Properties" : {
				"AssumeRolePolicyDocument" : {
					"Version" : "2012-10-17",
					"Statement" : [ {
						"Effect" : "Allow",
						"Principal" : {
							"Service" : [ "ec2.amazonaws.com" ]
						},
						"Action" : [ "sts:AssumeRole" ]
						} ]
					},
					"Path" : "/",
					"Policies" : [
						{
							"PolicyName" : "python-iam-instance-policy",
							"PolicyDocument": {
								"Version" : "2012-10-17",
								"Statement" : [
									{
										"Action" : [
											"ec2:AttachVolume"
										],
										"Resource" : [
											{"Fn::Join": ["", ["arn:aws:ec2:", {"Ref": "AWS::Region"},":", {"Ref":"AWS::AccountId"}, ":instance/*"]]},
											{"Fn::Join": ["", ["arn:aws:ec2:", {"Ref": "AWS::Region"},":", {"Ref":"AWS::AccountId"}, ":volume/", {"Ref": "NotebookVolume"}]]}
										],
										"Effect" : "Allow"
									}

								]
							}
						}
					]

				}
			},
			"InstanceProfile": {
				"Type" : "AWS::IAM::InstanceProfile",
				"Properties" : {
					"Path" : "/",
					"Roles" : [
						{ "Ref" : "IamRole" }
					]
				}
			},


		"LaunchTemplate" : {
			"Type" : "AWS::EC2::LaunchTemplate",
			"Properties" : {
				"LaunchTemplateName" : {"Fn::Join":["-", [{"Ref":"AWS::StackName"}, "lt"]]},
				"LaunchTemplateData" : {
					"KeyName" : {"Ref" : "Ec2KeyPair"},
					"IamInstanceProfile" : {
						"Arn" : { "Fn::GetAtt" : [ "InstanceProfile", "Arn" ]	}
					},
					"ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" }, "HVM64" ]},
					"SecurityGroupIds" : [
						{ "Fn::GetAtt" : ["Ec2SecurityGroup", "GroupId"] }
					],
					"TagSpecifications" : [
						{
							"ResourceType" : "instance",
							"Tags" : [
								{ "Key" : "Name", "Value" : {"Fn::Join": ["-", [{"Ref": "AWS::StackName"}, "LaunchTemplate"]]}},
								{ "Key" : "Project", "Value" : {"Ref": "Project"} }
							]
						}
					],
					"BlockDeviceMappings": [
						{
							"DeviceName": "/dev/xvda",
							"Ebs": {
								"VolumeSize": "32",
								"VolumeType":"gp2"
							}
						}
					],

					"UserData" : { "Fn::Base64" : { "Fn::Join" : ["\n",[
							"#!/bin/bash",
							"yum update -y",
							"yum install -y git docker tmux jq",
							"curl https://bootstrap.pypa.io/get-pip.py | /usr/bin/python2.7",
							"curl https://rpm.nodesource.com/setup_8.x | bash -",
							"yum install -y nodejs",
							"pip install -q boto3",
							"usermod -a -G docker ec2-user",
							"INSTANCE=$(curl http://169.254.169.254/latest/meta-data/instance-id)",
							"REGION=$(/opt/aws/bin/ec2-metadata -z | sed 's/.* \\(.*\\).$/\\1/')",
							{"Fn::Join": ["", ["aws --region $REGION ec2 attach-volume --volume-id ", {"Ref": "NotebookVolume"}," --device /dev/sdf --instance-id $INSTANCE"]]},
							"service docker start",
							"docker pull kaggle/python",
							"if ! blkid /dev/sdf; then mkfs /dev/sdf; fi",
							"mount /dev/sdf /mnt",
							"docker run -v /mnt:/tmp/working -w=/tmp/working -p 8888:8888 --rm kaggle/python jupyter notebook --no-browser --ip=\"0.0.0.0\" --allow-root --notebook-dir=/tmp/working --NotebookApp.token=\"\"",
							"date > bootstrap.log"]]}
						}
					}
				}
			}



		},
		"Mappings" : {
			"AWSRegionArch2AMI" : {
				"us-east-1"        : {"HVM64" : "ami-97785bed"},
				"us-west-2"        : {"HVM64" : "ami-f2d3638a"},
				"us-west-1"        : {"HVM64" : "ami-824c4ee2"},
				"eu-west-1"        : {"HVM64" : "ami-d834aba1"},
				"eu-west-2"        : {"HVM64" : "ami-403e2524"},
				"eu-west-3"        : {"HVM64" : "ami-8ee056f3"},
				"eu-central-1"     : {"HVM64" : "ami-5652ce39"},
				"ap-northeast-1"   : {"HVM64" : "ami-ceafcba8"},
				"ap-northeast-2"   : {"HVM64" : "ami-863090e8"},
				"ap-northeast-3"   : {"HVM64" : "ami-83444afe"},
				"ap-southeast-1"   : {"HVM64" : "ami-68097514"},
				"ap-southeast-2"   : {"HVM64" : "ami-942dd1f6"},
				"ap-south-1"       : {"HVM64" : "ami-531a4c3c"},
				"us-east-2"        : {"HVM64" : "ami-f63b1193"},
				"ca-central-1"     : {"HVM64" : "ami-a954d1cd"},
				"sa-east-1"        : {"HVM64" : "ami-84175ae8"},
				"cn-north-1"       : {"HVM64" : "ami-cb19c4a6"},
				"cn-northwest-1"   : {"HVM64" : "ami-3e60745c"}
			}
		},
		"Metadata": {
			"AWS::CloudFormation::Interface" : {
				"ParameterGroups" : [
					{
						"Label" : { "default" : "Project Information"},
						"Parameters" : [ "Project" ]
					},
					{
						"Label" : { "default" : "Network Placement"},
						"Parameters" : [
							"Ec2KeyPair",
							"VPC",
							"SubnetId",
							"NetworkAccessIP"
						]
					},
					{
						"Label" : { "default" : "DNS Configuration"},
						"Parameters" : [
							"HostName",
							"DomainName"
						]
					}
				],
				"ParameterLabels" : {
					"Ec2KeyPair": { "default" : "Key Pair to allow SSH access" },
					"VPC": { "default" : "VPC to place instance in" },
					"SubnetId": { "default" : "Subnet to place instance" },
					"NetworkAccessIP": { "default" : "Network with SSH access" },
					"DomainName": { "default" : "Domainname to use (optional)" },
					"HostName": { "default" : "Hostname to use (optional)" }
				}
			}
		},
		"Outputs": {

		}

	}
